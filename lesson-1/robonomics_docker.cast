{"version": 2, "width": 127, "height": 32, "timestamp": 1612495060, "env": {"SHELL": "/run/current-system/sw/bin/zsh", "TERM": "screen-256color"}}
[0.025647, "o", "\r\r\n\u001b[1;32m[\u001b]0;akru@krakov: ~\u0007akru@krakov:~]$\u001b[0m "]
[0.423681, "o", "d"]
[0.727839, "o", "o"]
[0.906855, "o", "c"]
[1.022452, "o", "k"]
[1.16178, "o", "e"]
[1.23299, "o", "r"]
[1.362925, "o", " "]
[1.743894, "o", "r"]
[1.890899, "o", "u"]
[2.033085, "o", "n"]
[2.462627, "o", " "]
[2.655845, "o", "-"]
[2.836798, "o", "t"]
[2.938592, "o", "i"]
[3.134689, "o", " "]
[3.406224, "o", "-"]
[3.566854, "o", "-"]
[4.1279, "o", "r"]
[4.302459, "o", "m"]
[4.430772, "o", " "]
[5.353358, "o", "-"]
[5.508647, "o", "-"]
[5.72643, "o", "n"]
[5.84571, "o", "e"]
[6.020627, "o", "t"]
[6.263088, "o", "w"]
[6.415783, "o", "o"]
[6.54918, "o", "r"]
[6.655571, "o", "k"]
[6.836778, "o", " "]
[7.13147, "o", "h"]
[7.33238, "o", "o"]
[7.500654, "o", "s"]
[7.619922, "o", "t"]
[8.150099, "o", " "]
[8.510849, "o", "-"]
[8.669015, "o", "-"]
[9.156728, "o", "d"]
[9.26719, "o", "e"]
[9.495709, "o", "v"]
[9.643868, "o", "i"]
[9.795862, "o", "c"]
[9.906136, "o", "e"]
[10.141152, "o", " "]
[10.318249, "o", "/"]
[10.370614, "o", "d"]
[10.455986, "o", "e"]
[10.719862, "o", "v/"]
[11.256459, "o", "t"]
[11.449333, "o", "t"]
[11.61588, "o", "y"]
[11.901739, "o", "U"]
[12.233245, "o", "SB0"]
[13.749181, "o", " "]
[14.25235, "o", "robonomics/robonomics:winter-school"]
[15.182829, "o", " "]
[15.531246, "o", "b"]
[15.705207, "o", "a"]
[15.81646, "o", "s"]
[15.96188, "o", "h"]
[17.695813, "o", "\r\n"]
[18.064781, "o", "\u001b]0;robonomics@krakov: /\u0007robonomics@krakov:/$ "]
[20.205872, "o", "r"]
[20.336253, "o", "o"]
[20.495694, "o", "b"]
[20.598622, "o", "o"]
[20.820804, "o", "n"]
[21.001698, "o", "o"]
[21.127121, "o", "m"]
[21.313095, "o", "ic"]
[21.414032, "o", "s"]
[21.557771, "o", " "]
[22.345254, "o", "-"]
[22.64151, "o", "h"]
[22.934757, "o", "\r\n"]
[23.023211, "o", "robonomics 0.23.0-057faf3-x86_64-linux-gnu\r\n\r\nAiralab <research@aira.life>\r\nRobonomics node implementation in Rust & Substrate.\r\n\r\nUSAGE:\r\n    robonomics [FLAGS] [OPTIONS] [-- <relaychain-args>...]\r\n    robonomics <SUBCOMMAND>\r\n\r\nFLAGS:\r\n        --alice                            Shortcut for `--name Alice --validator` with session keys for `Alice` added\r\n                                           to keystore\r\n        --bob                              Shortcut for `--name Bob --validator` with session keys for `Bob` added to\r\n                                           keystore\r\n        --charlie                          Shortcut for `--name Charlie --validator` with session keys for `Charlie`\r\n                                           added to keystore\r\n        --dave                             Shortcut for `--name Dave --validator` with session keys for `Dave` added to\r\n                                           keystore\r\n        --dev                              Specify the development chain\r\n        --"]
[23.023544, "o", "disable-log-color                Disable log color output\r\n        --disable-log-reloading            Disable feature to dynamically update and reload the log filter\r\n        --discover-local                   Enable peer discovery on local networks\r\n        --eve                              Shortcut for `--name Eve --validator` with session keys for `Eve` added to\r\n                                           keystore\r\n        --ferdie                           Shortcut for `--name Ferdie --validator` with session keys for `Ferdie` added\r\n                                           to keystore\r\n        --force-authoring                  Enable authoring even when offline\r\n    -h, --help                             Prints help information\r\n        --kademlia-disjoint-query-paths    Require iterative Kademlia DHT queries to use disjoint paths for increased\r\n                                           resiliency in the presence of potentially adversarial nodes\r\n        --light                            Experiment"]
[23.02357, "o", "al: Run in light client mode\r\n        --no-grandpa                       Disable GRANDPA voter when running in validator mode, otherwise disable the\r\n                                           GRANDPA observer\r\n        --no-mdns                          Disable mDNS discovery\r\n        --no-private-ipv4                  Forbid connecting to private IPv4 addresses (as specified in\r\n                                           [RFC1918](https://tools.ietf.org/html/rfc1918)), unless the address was\r\n                                           passed with `--reserved-nodes` or `--bootnodes`\r\n        --no-prometheus                    Do not expose a Prometheus metric endpoint\r\n        --no-telemetry                     Disable connecting to the Substrate telemetry server\r\n        --one                              Shortcut for `--name One --validator` with session keys for `One` added to\r\n                                           keystore\r\n        --password-interactive             Use interactive shell for entering"]
[23.023588, "o", " the password used by the keystore\r\n        --prometheus-external              Listen to all Prometheus data source interfaces\r\n        --reserved-only                    Whether to only allow connections to/from reserved nodes\r\n        --rpc-external                     Listen to all RPC interfaces\r\n        --storage-chain                    Enable storage chain mode\r\n        --tmp                              Run a temporary node\r\n        --two                              Shortcut for `--name Two --validator` with session keys for `Two` added to\r\n                                           keystore\r\n        --unsafe-pruning                   Force start with unsafe pruning settings\r\n        --unsafe-rpc-external              Listen to all RPC interfaces\r\n        --unsafe-ws-external               Listen to all Websocket interfaces\r\n        --validator                        Enable validator mode\r\n    -V, --version                          Prints version information\r\n        --ws-external                   "]
[23.023992, "o", "   Listen to all Websocket interfaces\r\n\r\nOPTIONS:\r\n    -d, --base-path <PATH>                                       Specify custom base path\r\n        --bootnodes <ADDR>...                                    Specify a list of bootnodes\r\n        --chain <CHAIN_SPEC>                                     Specify the chain specification\r\n        --database <DB>                                          Select database backend to use\r\n        --db-cache <MiB>                                         Limit the memory the database cache can use\r\n        --offchain-worker <ENABLED>\r\n            Should execute offchain workers on every block [default: WhenValidating]  [possible values: Always, Never,\r\n            WhenValidating]\r\n        --execution <STRATEGY>\r\n            The execution strategy that should be used by all execution contexts [possible values: Native, Wasm, Both,\r\n            NativeElseWasm]\r\n        --execution-block-construction <STRATEGY>\r\n            The means of execution used when calling into the run"]
[23.024019, "o", "time while constructing blocks [possible values:\r\n            Native, Wasm, Both, NativeElseWasm]\r\n        --execution-import-block <STRATEGY>\r\n            The means of execution used when calling into the runtime for general block import (including locally\r\n            authored blocks) [possible values: Native, Wasm, Both, NativeElseWasm]\r\n        --execution-offchain-worker <STRATEGY>\r\n            The means of execution used when calling into the runtime while using an off-chain worker [possible values:\r\n            Native, Wasm, Both, NativeElseWasm]\r\n        --execution-other <STRATEGY>\r\n            The means of execution used when calling into the runtime while not syncing, importing or constructing\r\n            blocks [possible values: Native, Wasm, Both, NativeElseWasm]\r\n        --execution-syncing <STRATEGY>\r\n            The means of execution used when calling into the runtime for importing blocks as part of an initial sync\r\n            [possible values: Native, Wasm, Both, NativeElseWasm]\r\n        -"]
[23.024033, "o", "-in-peers <COUNT>\r\n            Specify the maximum number of incoming connections we're accepting [default: 25]\r\n\r\n        --enable-offchain-indexing <ENABLE_OFFCHAIN_INDEXING>\r\n            Enable Offchain Indexing API, which allows block import to write to Offchain DB\r\n\r\n        --ipc-path <PATH>                                        Specify IPC RPC server path\r\n        --keep-blocks <COUNT>\r\n            Specify the number of finalized blocks to keep in the database\r\n\r\n        --keystore-path <PATH>                                   Specify custom keystore path\r\n        --keystore-uri <keystore-uri>                            Specify custom URIs to connect to for keystore-services\r\n        --listen-addr <LISTEN_ADDR>...                           Listen on this multiaddress\r\n    -l, --log <LOG_PATTERN>...\r\n            Sets a custom logging filter. Syntax is <target>=<level>, e.g. -lsync=debug\r\n\r\n        --max-parallel-downloads <COUNT>\r\n            Maximum number of peers from which to ask for the same block"]
[23.024046, "o", "s in parallel [default: 5]\r\n\r\n        --max-runtime-instances <max-runtime-instances>          The size of the instances cache for each runtime\r\n        --name <NAME>                                            The human-readable name for this node\r\n        --node-key <KEY>                                         The secret key to use for libp2p networking\r\n        --node-key-file <FILE>\r\n            The file from which to read the node's secret key to use for libp2p networking\r\n\r\n        --node-key-type <TYPE>\r\n            The type of secret key to use for libp2p networking [default: Ed25519]  [possible values: Ed25519]\r\n\r\n        --out-peers <COUNT>\r\n            Specify the number of outgoing connections we're trying to maintain [default: 25]\r\n\r\n        --parachain-id <parachain-id>                            Id of the parachain this collator collates for\r\n        --password <password>                                    Password used by the keystore\r\n        --password-filename <PATH>                       "]
[23.024429, "o", "        File that contains the password used by the keystore\r\n        --pool-kbytes <COUNT>\r\n            Maximum number of kilobytes of all transactions stored in the pool [default: 20480]\r\n\r\n        --pool-limit <COUNT>\r\n            Maximum number of transactions in the transaction pool [default: 8192]\r\n\r\n        --port <PORT>                                            Specify p2p protocol TCP port\r\n        --"]
[23.02465, "o", "prometheus-port <PORT>                                 Specify Prometheus data source server TCP Port\r\n        --pruning <PRUNING_MODE>\r\n            Specify the state pruning mode, a number of blocks to keep or 'archive'\r\n\r\n        --public-addr <PUBLIC_ADDR>...\r\n            The public address that other nodes will use to connect to it. This can be used if there's a proxy in front\r\n            of this node\r\n        --reserved-nodes <ADDR>...                               Specify a list of reserved node addresses\r\n        --rpc-cors <ORIGINS>\r\n            Specify browser Origins allowed to access the HTTP & WS RPC servers\r\n\r\n        --rpc-methods <METHOD SET>\r\n            RPC methods to expose. [default: Auto]  [possible values: Auto, Safe, Unsafe]\r\n\r\n        --rpc-port <PORT>                                        Specify HTTP RPC server TCP port\r\n        --sentry <sentry>...                                     Enable sentry mode\r\n        --sentry-nodes <ADDR>...                                 Specify a list"]
[23.024677, "o", " of sentry node public addresses\r\n        --state-cache-size <Bytes>                               Specify the state cache size [default: 67108864]\r\n        --telemetry-url <URL VERBOSITY>...                       The URL of the telemetry server to connect to\r\n        --tracing-receiver <RECEIVER>\r\n            Receiver to process tracing messages [default: Log]  [possible values: Log, Telemetry]\r\n\r\n        --tracing-targets <TARGETS>\r\n            Sets a custom profiling filter. Syntax is the same as for logging: <target>=<level>\r\n\r\n        --wasm-execution <METHOD>\r\n            Method for executing Wasm runtime code [default: Interpreted]  [possible values: Interpreted, Compiled]\r\n\r\n        --wasm-runtime-overrides <PATH>                          Specify the path where local WASM runtimes are stored\r\n        --ws-max-connections <COUNT>                             Maximum number of WS RPC server connections\r\n        --ws-port <PORT>                                         Specify WebSockets RPC server TCP por"]
[23.024692, "o", "t\r\n\r\nARGS:\r\n    <relaychain-args>...    Polkadot relaychain arguments\r\n\r\nSUBCOMMANDS:\r\n    build-spec              Build a chain specification\r\n    export-genesis-state    Export the genesis state of the parachain\r\n    export-genesis-wasm     Export the genesis wasm of the parachain\r\n    help                    Prints this message or the help of the given subcommand(s)\r\n    io                      Robonomics Framework I/O operations\r\n    key                     Key management cli utilities\r\n    purge-chain             Remove the whole chain\r\n    sign                    Sign a message, with a given (secret) key\r\n    vanity                  Generate a seed that provides a vanity address\r\n    verify                  Verify a signature for a message, provided on STDIN, with a given (public or secret) key\r\n"]
